
        ＬＡ各部の仕様

★ファイル名について

　ＬＡでは８文字ファイル名と３文字の拡張子を付けられます。
Ｘ６８ｋとの差分のファイル名１０文字はＬＡバイナリ形式の時に用います。

具体的にＬＡバイナリ形式は 

開始番地＋ＬＡバイナリ形式のＩＤ（＄Ａ０）＋実行番地＋＄００

になっています。この開始番地と実行番地は４バイトのＡＳＣＩＩ形式で格納されており
Ｘ６８ｋでＤＩＲしても見る事ができます。

ＦＯＲＭＡＴ　　．ＢＩＮ：３０００：３３ＥＥ：３０００のディレクトリエントリ
			  開始番地　最終番地　実行番地

46 4F 52 4D 41 54 A0 A0 42 49 4E 20 33 30 30 30
 F  O  R  M  A  T	 B  I  N ↑  3  0  0  0
<   ファイルネーム 　 >  <拡張子>↑  <開始番地>
				<属性>

A0 33 30 30 30 00 A3 B1 EC 1C 90 00 EF 03 00 00
↑  3  0  0  0     <ﾀｲﾑｽﾀﾝﾌﾟ> <ｸﾗｽﾀ> < サイズ >
↑　<実行番地>
<ﾊﾞｲﾅﾘ形式>


        Ｘ６８ｋでＤＩＲした場合

ＦＯＲＭＡＴ　　３０００　３０００．ＢＩＮ      １００７
<ファイルネーム>開始番地　実行番地　拡張子      ファイルサイズ（１０進数）


　ＬＡバイナリ形式ではファイル名が８文字以下のファイルをＸ６８ｋでコピーしても開
始番地と実行番地が失われないようにファイル名のスペース（＄２０）が（＄Ａ０）に置
き換えられます。（拡張子の部分は置き換えられない）

　ＭＳ−ＤＯＳマシンでＬＡバイナリ形式のファイルをコピーするとアドレス情報が失わ
れますのでＭＳＸバイナリ形式に変換してからコピーします。

　それからＨｕｍａｎ６８ｋのコマンドラインで８文字以下のＬＡバイナリ形式のファイ
ルを扱う場合はスペースの部分にワイルドカードを用いて下さい。
（＄Ａ０のキャラはＸ１やＸ６８ｋでは半角カナモードでシフトを押しながら【ろ】のキ
ーを押すと出てきます。）

例）ＬＡ．ＳＹＳをコピーする場合。

	Ａ＞ＣＯＰＹ　ＬＡ＊．ＳＹＳ　Ｂ：

	Ｘ６８ｋのソフトのＳＴＦでは普通にコピー出来ます。

ＬＡでも普通の形式のファイル（アスキーファイル等）は開始番地や実行番地を持たない
ので（＄Ａ０）に置き換えられません

-	-	-	-	-	-	-	-	-	-

　ＭＳＸバイナリ形式はＭＳＸのＢＳＡＶＥ形式でファイルの先頭にアドレス情報を格納

する方法です。具体的にはファイルの先頭に以下の７バイトのヘッダを付けます。

<オフセット>	<サイズ>	<内容>
  ＋０		１バイト	ＭＳＸバイナリ形式のＩＤ（＄ＦＥ）
  ＋１		２バイト	開始番地
  ＋３		２バイト	終了番地
  ＋５		２バイト	実行番地
  ＋７		不定		実際のファイルの本体

　ということで実際のファイルの内容はファイルの先頭＋７バイトから格納しています。

-	-	-	-	-	-	-	-	-	-


　ＬＡでは英小文字のファイルネームと拡張子を付ける事は出来ません。ＭＳ−ＤＯＳと
の互換の為自動的に大文字に置き換えられます。
　しかし、英小文字のファイルの読み込みは可能です。

それから、ＬＡではシステムで使用するため（半角文字の）以下の文字をファイルネーム
と拡張子に使えません。

	：  ．	　￥　＊　？
 ｽﾍﾟｰｽ ｺﾛﾝ ﾋﾟﾘｵﾄﾞ

　Ｈｕｍａｎ６８ｋ，ＭＳ−ＤＯＳとの互換の為には必ず以下の文字を用いて下さい

　Ａ〜Ｚ　０〜９　＆　＃　（　）　＠

　＿　＾　｛　｝　！　カナ文字（＋カナ記号）

　これら以外の文字を使用するとＨｕｍａｎ６８ｋやＭＳ−ＤＯＳでアクセス出来なくな
ることがあります。


★ワイルドカード

  ファイル名の指定で使うトランプのジョーカーのみたいなものです。

　同じ拡張子を持ったファイルを表示したり、ある特定の頭文字を持っているファイルだ

けを指定したい場合に便利。ワイルドカードには＊と？の２種類あります。

        ＊．．．＊の部分にはどんな文字が何文字あってもよい

        ？．．．？の部分はどんな文字でもよい（だだし１文字だけ）


　＊は文字列の代わりになるものなので、＊が１つあればそこにはどんな文字が何文字あ

ってもいいです。？は１文字分の代わりにしかならないけど１つのファイルの中で複数使

えます。もちろん＊と？を組み合わせて使うことも出来ます。


★階層化ディレクトリの取り扱い

[<ﾄﾞﾗｲﾌﾞ名>：][￥][<ﾃﾞｨﾚｸﾄﾘ名>￥]…[<ﾃﾞｨﾚｸﾄﾘ名>￥]<ﾌｧｲﾙ名>[．<拡張子>]

ファイル名までの［￥］［ﾃﾞｨﾚｸﾄﾘ名￥］…［ﾃﾞｨﾚｸﾄﾘ名￥］がパス名になります。

ここで、「￥」はパス名を通すためのディレクトリ名およびファイル名を区切るための区
切り記号です。ただし、いちばん最初の「￥」は、ルートディレクトリを表わすシンボル
となります。
「￥」をいちばん最初に書くとルートディレクトリからの絶対指定になります。

また、サブディレクトリを作ると自動的に出来ている「．．」は一つ前の親ディレクト
リを示します。

．．￥ＦＩＬＥＮＡＭＥ

とすると一つ戻ってファイルを指定出来ます。（相対指定）


★カレントディレクトリの移動

Ｈｕｍａｎ６８ｋやＭＳ−ＤＯＳでは「ＣＤ」という命令がありますがＬＡでは「Ｌ」コ
マンドがそれに当たります。

Ｌコマンドにディレクトリの移動も兼ねさせた理由はＳ−ＯＳの階層化ディレクトリに対
応していないアプリケーションでもカレントディレクトリの移動ができるからです。
（ＷＩＮＥＲ等のエディタでサブディレクトリをロードするとカレントディレクリトリ
が移動します）

階層化ディレクトリについてはディレクトリの移動コマンドが「Ｌ」になっている以外は
Ｈｕｍａｎ６８ｋやＭＳ−ＤＯＳとほぼ同様だと思われますのでそういう本も参考にして
みて下さい。


★外部コマンドのパス機能

　ＣＯＰＹやＴＹＰＥという命令まで外部コマンドのＬＡですが、パス機能を用いると
　内部コマンドに近い感覚で使えるようになります

　パス機能とは．．．
　普通外部コマンドはカレントドライブにない場合はエラーになりますが、
　パスを設定しているとパスに設定されたドライブを順に調べてそこにあれば、
　実行するという機能です

　まず、ＬＡのフロッピーでＲＡＭディスクを確保して必要なコマンドを
　ＲＡＭディスクに転送しましょう

	ＧＲＡＤ　／Ｆ　Ｅ：

	ＣＯＰＹ　ＣＯＰＹ．ＢＩＮ　Ｅ：

　使えればＢＲＡＤやＥＲＡＤを用いてもいいです。
　次にパスを設定します

	Ｐ　＠ＥＡ

　＠はカレントドライブを表します。
　こうするとカレントに外部コマンドがない場合、Ｇ−ＲＡＭディスク、フロッピー０を
　調べます。だから、フロッピーにＣＯＰＹコマンドが入ってなくても
　ＣＯＰＹコマンドが使えます


★ＬＡと外部記憶装置

　ＬＡは１クラスタ１０２４バイトのブロックデバイス（ディスクのように一度にまと
　まったデータを読み書きでき、ランダムアクセス可能なデバイス）をサポートして
　います

　ＬＡのフロッピーフォーマットは
　２Ｄ（９セクタ×５１２バイト）、２ＨＤ（８セクタ×１０２４バイト）が基本ですが
　２Ｄは（５セクタ×１０２４バイト）や（１０セクタ×５１２バイト）もサポート出来
　ます。（４００ＫＢ）

　２ＨＤは２ＨＳ（９セクタ×１０２４バイト）２ＨＤＥ（９セクタ×１０２４バイト）
　もサポートできます。


★ＬＡと大容量デバイス

　ＬＡの基本は１．５バイトＦＡＴですが、ＨｕｍａｎもしくはＭＳ−ＤＯＳ形式の
　２バイトＦＡＴをサポートできます。

　ＬＡの１クラスタは１０２４バイトですので、

　　　６５５３６（２バイト）×１０２４バイト＝６４Ｍバイト

　１ドライブで約６４Ｍバイトまでサポートできます。

　この場合、１０２４バイト単位の入出力ルーチンとＦＡＴ（読み書き）処理ルーチンが
　必要です。

　また、１つのデバイスを１Ｍバイトずつに分割（１つのデバイスドライバで２５６に
　分割出来ます）すると、ＦＡＴ処理ルーチンにＬＡの標準ルーチンを使用出来ますので
　デバイスドライバの処理ルーチンが楽に作れます

　　　１Ｍバイト×２５６＝２５６Ｍバイト

　ＬＡのフロッピーやＲＡＭディスクは基本的にＭＳ−ＤＯＳ互換フォーマットなので
　ＢＡＳＩＣのフロッピーやＲＡＭディスクとは互換性がありません


★特殊ワークエリア

　特殊ワークエリアとはﾒｲﾝﾒﾓﾘ以外のﾒﾓﾘを有効に多くの機種で同様に扱う為にＯＳで用

意されたｻﾌﾞﾙｰﾁﾝ（#POKE,#POKE@,#PEEK,#PEEK@）でｱｸｾｽされるﾜｰｸｴﾘｱです。

　Ｘ１ではG-RAMのﾊﾞﾝｸ０を割り当てています。


eof
